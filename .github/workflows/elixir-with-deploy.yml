# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Elixir Workflow
on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports:
            - "5432:5432"
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: planning_poker_test

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MIX_ENV: test
      DATABASE_URL: ecto://postgres:postgres@localhost:5432/planning_poker_test

    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Cache mix deps
        uses: actions/cache@v4
        with:
          path: deps
          key: mix-deps-${{ runner.os }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-deps-${{ runner.os }}-
      - name: Cache _build
        uses: actions/cache@v4
        with:
          path: _build
          key: mix-build-${{ runner.os }}-${{ env.MIX_ENV }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-build-${{ runner.os }}-${{ env.MIX_ENV }}-
      - name: Install dependencies
        run: mix deps.get
      - name: Compile dependencies
        run: mix deps.compile
      - name: Compile code
        run: mix compile
      - name: Set up database
        run: |
          mix ecto.create
          mix ecto.migrate
      - name: Run tests
        run: mix test
      - name: Run Credo
        run: mix credo --no-color
  deploy:
    name: Deploy app
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
